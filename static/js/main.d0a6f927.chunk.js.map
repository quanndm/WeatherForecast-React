{"version":3,"sources":["perfect-day.svg","components/CityComponent.jsx","components/WeatherComponent.jsx","App.js","index.js"],"names":["WeatherLogo","styled","img","ChooseCityLabel","span","SearchBox","form","CityComponent","props","setCity","fetchWeather","src","logo","onSubmit","type","placeholder","onChange","e","target","value","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","WeatherCondition","div","Condition","Location","WeatherInfoLabel","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","name","WeatherComponent","timeStamp","weather","removeWeather","isDay","icon","includes","Math","floor","main","temp","description","sys","country","Date","getHours","getMinutes","himidity","speed","onClick","style","margin","padding","color","background","border","outline","cursor","Container","AppLabel","App","useState","city","setWeather","a","preventDefault","axios","get","response","data","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0a6f927.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/perfect-day.5156c281.svg\";","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport logo from \"../perfect-day.svg\";\r\nconst WeatherLogo = styled.img`\r\n    width: 140px;\r\n    height: 140px;\r\n    margin: 40px auto;\r\n`;\r\nconst ChooseCityLabel = styled.span`\r\n    color: black;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin: 10px auto;\r\n`;\r\nconst SearchBox = styled.form`\r\n    display: flex;\r\n    flex-direction: row;\r\n    border: 1px solid black;\r\n    border-radius: 2px;\r\n    color: black;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin: 20px auto;\r\n    & input{\r\n        padding: 10px;\r\n        font-size: 18px;\r\n        border: none;\r\n        outline: none; \r\n        font-weight: bold;\r\n    }\r\n    & button{\r\n        padding: 10px;\r\n        font-size: 18px;\r\n        color: white;\r\n        background: black;\r\n        border: none;\r\n        outline: none; \r\n        font-weight: bold;\r\n        cursor:pointer;\r\n    }\r\n`;\r\nconst CityComponent = (props) => {\r\n    const {setCity, fetchWeather} = props;\r\n    return (\r\n        <>\r\n            <WeatherLogo src={logo}/>\r\n            <ChooseCityLabel>Find Weather of your city</ChooseCityLabel>\r\n            <SearchBox onSubmit={fetchWeather}>\r\n                <input type=\"text\" placeholder=\"City\" onChange={(e)=>setCity(e.target.value)}/>\r\n                <button>Search</button>\r\n            </SearchBox>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CityComponent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nconst WeatherInfoIcons = {\r\n    sunset: \"temp.svg\",\r\n    sunrise: \"temp.svg\",\r\n    humidity: \"humidity.svg\",\r\n    wind: \"wind.svg\",\r\n    pressure: \"pressure.svg\"\r\n};\r\nconst WeatherCondition = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    margin: 30px auto;\r\n`;\r\nconst Condition = styled.div`\r\n    margin: 2px auto;\r\n    font-size: 18px;\r\n    & span{\r\n        font-size: 28px;\r\n    }\r\n`;\r\nconst Location = styled.div`\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n`;\r\nconst WeatherLogo = styled.img`\r\n    width: 100px;\r\n    height: 100px;\r\n    margin: 5px auto;\r\n`;\r\nconst WeatherInfoLabel = styled.div`\r\n    width: 90%;\r\n    text-align: left;\r\n    font-size: 18px;\r\n    font-weight:bold;\r\n    margin: 20px 25px 18px;\r\n`;\r\nconst WeatherInfoContainer = styled.div`\r\n    width: 100%;\r\n    /* display:flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    flex-wrap: wrap; */\r\n    display:grid;\r\n    grid-template-columns: 1fr 1fr;\r\n`;\r\nconst InfoContainer = styled.div`\r\n    display:grid;\r\n    grid-template-columns: 1fr 2fr;\r\n`;\r\nconst InfoIcon = styled.img`\r\n    width: 36px;\r\n    height: 36px;\r\n    margin: auto;\r\n`;\r\nconst InfoLabel = styled.span`\r\n    display:flex;\r\n    flex-direction: column;\r\n    font-size: 18px;\r\n    margin:15px;\r\n    & span{\r\n        font-size: 16px;\r\n        text-transform: capitalize;\r\n    }\r\n`\r\nconst WeatherInfoComponent = (props) => {\r\n    const { name, value } = props;\r\n    return (\r\n        <InfoContainer>\r\n            <InfoIcon src={`./icons/${WeatherInfoIcons[name]}`} />\r\n            <InfoLabel>\r\n                <span>{value?value:\"--:--\"}</span>\r\n                <span>{name}</span>\r\n            </InfoLabel>\r\n        </InfoContainer>\r\n    )\r\n}\r\nconst WeatherComponent = (props) => {\r\n    const { weather, removeWeather } = props;\r\n    const isDay = weather?.weather[0].icon?.includes(\"d\");\r\n    const getTime = (timeStamp) => {\r\n        return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`;\r\n    }\r\n    return (\r\n        <>\r\n            <WeatherCondition>\r\n                <Condition>\r\n                    <span>{Math.floor(weather?.main?.temp - 273)} &#8451;</span> | {weather?.weather[0].description}\r\n                </Condition>\r\n                <WeatherLogo src=\"./icons/perfect-day.svg\" />\r\n            </WeatherCondition>\r\n            <Location>{weather?.name}, {weather.sys.country}</Location>\r\n            <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\r\n            <WeatherInfoContainer>\r\n                <WeatherInfoComponent\r\n                    name={isDay ? \"sunset\" : \"sunrise\"}\r\n                    value={getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}\r\n                />\r\n                <WeatherInfoComponent name=\"humidity\" value={weather?.main?.himidity} />\r\n                <WeatherInfoComponent name=\"wind\" value={weather?.wind?.speed} />\r\n                <WeatherInfoComponent name=\"pressure\" value={weather?.main?.pressure} />\r\n            </WeatherInfoContainer>\r\n            <button\r\n                onClick={() => removeWeather()}\r\n                style={{\r\n                    margin: \"10px\",\r\n                    padding: \"10px\",\r\n                    'font-size': '18px',\r\n                    color: 'white',\r\n                    background: 'black',\r\n                    border: 'none',\r\n                    outline: 'none',\r\n                    'font-weight': 'bold',\r\n                    cursor:'pointer',\r\n                }}\r\n            >\r\n            Search Another\r\n        </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherComponent\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport CityComponent from './components/CityComponent';\r\nimport WeatherComponent from './components/WeatherComponent';\r\nimport axios from 'axios';\r\nconst API_KEY = \"47510f1ef1f4678f04581e2765857e4b\";\r\nconst Container = styled.div`\r\n    display:flex;\r\n    flex-direction:column;   \r\n    margin: auto;\r\n    align-items:center;\r\n    box-shadow: 0 3px 6px 0 #555;\r\n    padding: 20px 10px;\r\n    border-radius: 5px;\r\n    width: 500px;\r\n    background: white;\r\n`;\r\nconst AppLabel = styled.span`\r\n    color: black;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n`;\r\nconst App = () => {\r\n    const [city, setCity] = useState(\"\");\r\n    const [weather, setWeather] = useState(null);\r\n    const fetchWeather = async (e)=>{\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`)\r\n            setWeather(response.data);\r\n        } catch (error) {\r\n            alert(`City:\"${city}\" not found!`);\r\n        }\r\n    }\r\n    const removeWeather = ()=>{\r\n        setWeather(null);\r\n    }\r\n    return (\r\n        <Container>\r\n            <AppLabel>\r\n                React Weather App\r\n            </AppLabel>\r\n            {\r\n                weather\r\n                ?<WeatherComponent weather={weather} removeWeather={removeWeather}/>\r\n                :<CityComponent setCity={setCity} fetchWeather={fetchWeather}/>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}